# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Article_article

    ArticleArticle(;
        title=nothing,
        body_markdown=nothing,
        published=false,
        series=nothing,
        main_image=nothing,
        canonical_url=nothing,
        description=nothing,
        tags=nothing,
        organization_id=nothing,
    )

    - title::String
    - body_markdown::String
    - published::Bool
    - series::String
    - main_image::String
    - canonical_url::String
    - description::String
    - tags::String
    - organization_id::Int64
"""
Base.@kwdef mutable struct ArticleArticle <: OpenAPI.APIModel
    title::Union{Nothing, String} = nothing
    body_markdown::Union{Nothing, String} = nothing
    published::Union{Nothing, Bool} = false
    series::Union{Nothing, String} = nothing
    main_image::Union{Nothing, String} = nothing
    canonical_url::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    tags::Union{Nothing, String} = nothing
    organization_id::Union{Nothing, Int64} = nothing

    function ArticleArticle(title, body_markdown, published, series, main_image, canonical_url, description, tags, organization_id, )
        OpenAPI.validate_property(ArticleArticle, Symbol("title"), title)
        OpenAPI.validate_property(ArticleArticle, Symbol("body_markdown"), body_markdown)
        OpenAPI.validate_property(ArticleArticle, Symbol("published"), published)
        OpenAPI.validate_property(ArticleArticle, Symbol("series"), series)
        OpenAPI.validate_property(ArticleArticle, Symbol("main_image"), main_image)
        OpenAPI.validate_property(ArticleArticle, Symbol("canonical_url"), canonical_url)
        OpenAPI.validate_property(ArticleArticle, Symbol("description"), description)
        OpenAPI.validate_property(ArticleArticle, Symbol("tags"), tags)
        OpenAPI.validate_property(ArticleArticle, Symbol("organization_id"), organization_id)
        return new(title, body_markdown, published, series, main_image, canonical_url, description, tags, organization_id, )
    end
end # type ArticleArticle

const _property_types_ArticleArticle = Dict{Symbol,String}(Symbol("title")=>"String", Symbol("body_markdown")=>"String", Symbol("published")=>"Bool", Symbol("series")=>"String", Symbol("main_image")=>"String", Symbol("canonical_url")=>"String", Symbol("description")=>"String", Symbol("tags")=>"String", Symbol("organization_id")=>"Int64", )
OpenAPI.property_type(::Type{ ArticleArticle }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ArticleArticle[name]))}

function check_required(o::ArticleArticle)
    true
end

function OpenAPI.validate_property(::Type{ ArticleArticle }, name::Symbol, val)
end
