# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SharedPodcast
The podcast that the resource belongs to

    SharedPodcast(;
        title=nothing,
        slug=nothing,
        image_url=nothing,
    )

    - title::String
    - slug::String
    - image_url::String : Podcast image url
"""
Base.@kwdef mutable struct SharedPodcast <: OpenAPI.APIModel
    title::Union{Nothing, String} = nothing
    slug::Union{Nothing, String} = nothing
    image_url::Union{Nothing, String} = nothing

    function SharedPodcast(title, slug, image_url, )
        OpenAPI.validate_property(SharedPodcast, Symbol("title"), title)
        OpenAPI.validate_property(SharedPodcast, Symbol("slug"), slug)
        OpenAPI.validate_property(SharedPodcast, Symbol("image_url"), image_url)
        return new(title, slug, image_url, )
    end
end # type SharedPodcast

const _property_types_SharedPodcast = Dict{Symbol,String}(Symbol("title")=>"String", Symbol("slug")=>"String", Symbol("image_url")=>"String", )
OpenAPI.property_type(::Type{ SharedPodcast }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SharedPodcast[name]))}

function check_required(o::SharedPodcast)
    true
end

function OpenAPI.validate_property(::Type{ SharedPodcast }, name::Symbol, val)
    if name === Symbol("image_url")
        OpenAPI.validate_param(name, "SharedPodcast", :format, val, "url")
    end
end
