# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SharedOrganization
The organization the resource belongs to

    SharedOrganization(;
        name=nothing,
        username=nothing,
        slug=nothing,
        profile_image=nothing,
        profile_image_90=nothing,
    )

    - name::String
    - username::String
    - slug::String
    - profile_image::String : Profile image (640x640)
    - profile_image_90::String : Profile image (90x90)
"""
Base.@kwdef mutable struct SharedOrganization <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    username::Union{Nothing, String} = nothing
    slug::Union{Nothing, String} = nothing
    profile_image::Union{Nothing, String} = nothing
    profile_image_90::Union{Nothing, String} = nothing

    function SharedOrganization(name, username, slug, profile_image, profile_image_90, )
        OpenAPI.validate_property(SharedOrganization, Symbol("name"), name)
        OpenAPI.validate_property(SharedOrganization, Symbol("username"), username)
        OpenAPI.validate_property(SharedOrganization, Symbol("slug"), slug)
        OpenAPI.validate_property(SharedOrganization, Symbol("profile_image"), profile_image)
        OpenAPI.validate_property(SharedOrganization, Symbol("profile_image_90"), profile_image_90)
        return new(name, username, slug, profile_image, profile_image_90, )
    end
end # type SharedOrganization

const _property_types_SharedOrganization = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("username")=>"String", Symbol("slug")=>"String", Symbol("profile_image")=>"String", Symbol("profile_image_90")=>"String", )
OpenAPI.property_type(::Type{ SharedOrganization }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SharedOrganization[name]))}

function check_required(o::SharedOrganization)
    true
end

function OpenAPI.validate_property(::Type{ SharedOrganization }, name::Symbol, val)
    if name === Symbol("profile_image")
        OpenAPI.validate_param(name, "SharedOrganization", :format, val, "url")
    end
    if name === Symbol("profile_image_90")
        OpenAPI.validate_param(name, "SharedOrganization", :format, val, "url")
    end
end
