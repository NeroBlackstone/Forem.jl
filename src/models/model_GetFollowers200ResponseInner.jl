# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""getFollowers_200_response_inner
A follower

    GetFollowers200ResponseInner(;
        type_of=nothing,
        id=nothing,
        user_id=nothing,
        name=nothing,
        path=nothing,
        profile_image=nothing,
    )

    - type_of::String : user_follower by default
    - id::Int64
    - user_id::Int64 : The follower&#39;s user id
    - name::String : The follower&#39;s name
    - path::String : A path to the follower&#39;s profile
    - profile_image::String : Profile image (640x640)
"""
Base.@kwdef mutable struct GetFollowers200ResponseInner <: OpenAPI.APIModel
    type_of::Union{Nothing, String} = nothing
    id::Union{Nothing, Int64} = nothing
    user_id::Union{Nothing, Int64} = nothing
    name::Union{Nothing, String} = nothing
    path::Union{Nothing, String} = nothing
    profile_image::Union{Nothing, String} = nothing

    function GetFollowers200ResponseInner(type_of, id, user_id, name, path, profile_image, )
        OpenAPI.validate_property(GetFollowers200ResponseInner, Symbol("type_of"), type_of)
        OpenAPI.validate_property(GetFollowers200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(GetFollowers200ResponseInner, Symbol("user_id"), user_id)
        OpenAPI.validate_property(GetFollowers200ResponseInner, Symbol("name"), name)
        OpenAPI.validate_property(GetFollowers200ResponseInner, Symbol("path"), path)
        OpenAPI.validate_property(GetFollowers200ResponseInner, Symbol("profile_image"), profile_image)
        return new(type_of, id, user_id, name, path, profile_image, )
    end
end # type GetFollowers200ResponseInner

const _property_types_GetFollowers200ResponseInner = Dict{Symbol,String}(Symbol("type_of")=>"String", Symbol("id")=>"Int64", Symbol("user_id")=>"Int64", Symbol("name")=>"String", Symbol("path")=>"String", Symbol("profile_image")=>"String", )
OpenAPI.property_type(::Type{ GetFollowers200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetFollowers200ResponseInner[name]))}

function check_required(o::GetFollowers200ResponseInner)
    true
end

function OpenAPI.validate_property(::Type{ GetFollowers200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "GetFollowers200ResponseInner", :format, val, "int32")
    end
    if name === Symbol("user_id")
        OpenAPI.validate_param(name, "GetFollowers200ResponseInner", :format, val, "int32")
    end
end
