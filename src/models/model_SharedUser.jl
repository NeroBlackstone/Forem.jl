# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SharedUser
The resource creator

    SharedUser(;
        name=nothing,
        username=nothing,
        twitter_username=nothing,
        github_username=nothing,
        website_url=nothing,
        profile_image=nothing,
        profile_image_90=nothing,
    )

    - name::String
    - username::String
    - twitter_username::String
    - github_username::String
    - website_url::String
    - profile_image::String : Profile image (640x640)
    - profile_image_90::String : Profile image (90x90)
"""
Base.@kwdef mutable struct SharedUser <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    username::Union{Nothing, String} = nothing
    twitter_username::Union{Nothing, String} = nothing
    github_username::Union{Nothing, String} = nothing
    website_url::Union{Nothing, String} = nothing
    profile_image::Union{Nothing, String} = nothing
    profile_image_90::Union{Nothing, String} = nothing

    function SharedUser(name, username, twitter_username, github_username, website_url, profile_image, profile_image_90, )
        OpenAPI.validate_property(SharedUser, Symbol("name"), name)
        OpenAPI.validate_property(SharedUser, Symbol("username"), username)
        OpenAPI.validate_property(SharedUser, Symbol("twitter_username"), twitter_username)
        OpenAPI.validate_property(SharedUser, Symbol("github_username"), github_username)
        OpenAPI.validate_property(SharedUser, Symbol("website_url"), website_url)
        OpenAPI.validate_property(SharedUser, Symbol("profile_image"), profile_image)
        OpenAPI.validate_property(SharedUser, Symbol("profile_image_90"), profile_image_90)
        return new(name, username, twitter_username, github_username, website_url, profile_image, profile_image_90, )
    end
end # type SharedUser

const _property_types_SharedUser = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("username")=>"String", Symbol("twitter_username")=>"String", Symbol("github_username")=>"String", Symbol("website_url")=>"String", Symbol("profile_image")=>"String", Symbol("profile_image_90")=>"String", )
OpenAPI.property_type(::Type{ SharedUser }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SharedUser[name]))}

function check_required(o::SharedUser)
    true
end

function OpenAPI.validate_property(::Type{ SharedUser }, name::Symbol, val)
    if name === Symbol("website_url")
        OpenAPI.validate_param(name, "SharedUser", :format, val, "url")
    end
end
