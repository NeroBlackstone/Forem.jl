# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ReactionsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ReactionsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ReactionsApi }) = "https://dev.to/api"

const _returntypes_reactions_post_ReactionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_reactions_post(_api::ReactionsApi, category::String, reactable_id::Int64, reactable_type::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_reactions_post_ReactionsApi, "/reactions", ["api-key", ])
    OpenAPI.Clients.set_param(_ctx.query, "category", category)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "reactable_id", reactable_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "reactable_type", reactable_type)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""create reaction

This endpoint allows the client to create a reaction to a specified reactable (eg, Article, Comment, or User). For examples:         * \"Like\"ing an Article will create a new \"like\" Reaction from the user for that Articles         * \"Like\"ing that Article a second time will return the previous \"like\"

Params:
- category::String (required)
- reactable_id::Int64 (required)
- reactable_type::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function reactions_post(_api::ReactionsApi, category::String, reactable_id::Int64, reactable_type::String; _mediaType=nothing)
    _ctx = _oacinternal_reactions_post(_api, category, reactable_id, reactable_type; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function reactions_post(_api::ReactionsApi, response_stream::Channel, category::String, reactable_id::Int64, reactable_type::String; _mediaType=nothing)
    _ctx = _oacinternal_reactions_post(_api, category, reactable_id, reactable_type; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_reactions_toggle_post_ReactionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("401", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_reactions_toggle_post(_api::ReactionsApi, category::String, reactable_id::Int64, reactable_type::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_reactions_toggle_post_ReactionsApi, "/reactions/toggle", ["api-key", ])
    OpenAPI.Clients.set_param(_ctx.query, "category", category)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "reactable_id", reactable_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "reactable_type", reactable_type)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""toggle reaction

This endpoint allows the client to toggle the user's reaction to a specified reactable (eg, Article, Comment, or User). For examples:         * \"Like\"ing an Article will create a new \"like\" Reaction from the user for that Articles         * \"Like\"ing that Article a second time will remove the \"like\" from the user

Params:
- category::String (required)
- reactable_id::Int64 (required)
- reactable_type::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function reactions_toggle_post(_api::ReactionsApi, category::String, reactable_id::Int64, reactable_type::String; _mediaType=nothing)
    _ctx = _oacinternal_reactions_toggle_post(_api, category, reactable_id, reactable_type; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function reactions_toggle_post(_api::ReactionsApi, response_stream::Channel, category::String, reactable_id::Int64, reactable_type::String; _mediaType=nothing)
    _ctx = _oacinternal_reactions_toggle_post(_api, category, reactable_id, reactable_type; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export reactions_post
export reactions_toggle_post
