# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct PodcastEpisodesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `PodcastEpisodesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ PodcastEpisodesApi }) = "https://dev.to/api"

const _returntypes_get_podcast_episodes_PodcastEpisodesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{PodcastEpisodeIndex},
    Regex("^" * replace("404", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_get_podcast_episodes(_api::PodcastEpisodesApi; page=nothing, per_page=nothing, username=nothing, _mediaType=nothing)
    OpenAPI.validate_param("page", "get_podcast_episodes", :minimum, page, 1, false)

    OpenAPI.validate_param("per_page", "get_podcast_episodes", :maximum, per_page, 1000, false)
    OpenAPI.validate_param("per_page", "get_podcast_episodes", :minimum, per_page, 1, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_podcast_episodes_PodcastEpisodesApi, "/podcast_episodes", [])
    OpenAPI.Clients.set_param(_ctx.query, "page", page)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "per_page", per_page)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "username", username)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Podcast Episodes

This endpoint allows the client to retrieve a list of podcast episodes.         \"Podcast episodes\" are episodes belonging to podcasts.         It will only return active (reachable) podcast episodes that belong to published podcasts available on the platform, ordered by descending publication date.         It supports pagination, each page will contain 30 articles by default.

Params:
- page::Int64
- per_page::Int64
- username::String

Return: Vector{PodcastEpisodeIndex}, OpenAPI.Clients.ApiResponse
"""
function get_podcast_episodes(_api::PodcastEpisodesApi; page=nothing, per_page=nothing, username=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_podcast_episodes(_api; page=page, per_page=per_page, username=username, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_podcast_episodes(_api::PodcastEpisodesApi, response_stream::Channel; page=nothing, per_page=nothing, username=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_podcast_episodes(_api; page=page, per_page=per_page, username=username, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_podcast_episodes
